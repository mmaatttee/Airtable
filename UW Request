/* CONFIG */
let aliasColumn = 'Alias'
let pointerColumn = 'Pointer'
let resultColumn = 'Description'
/* Table & View ID */
let tableID = cursor.activeTableId;
let table = base.getTable(tableID);
let viewID = cursor.activeViewId;
let view = table.getView(viewID);


/* SCRIPT */

/* list of all records in view */
let result = await view.selectRecordsAsync();
for (let record of result.records) {
    let query = record.getCellValueAsString(queryColumn)
    let seachQuery = encodeURIComponent(query)
    /* skips wiki request if airtable record has no query */
    if (query == null) {continue}
    /* skips request if airtable record already has */
    if (record.getCellValue(resultColumn) == null) {
        let wikiURL = 
            'https://' + language +
            '.wikipedia.org/w/api.php?origin=*' + 
            /* specify content of wiki request (https://en.wikipedia.org/w/api.php?) */
            '&action=query&prop=extracts&titles=' + seachQuery + '&exintro' +
            '&format=json';
        let wikiResponse = await fetch(wikiURL, {mode:"cors", headers:{origin:"*"}});
        let wikiJSON = await wikiResponse.json();
        let wikiIntroHTML = wikiJSON.query.pages[Object.keys(wikiJSON.query.pages)].extract;
        try {
            /* removes everything but raw text */
            var wikiIntroText = wikiIntroHTML.replace(/\n|<.*?>/gm,''); 
        }
        catch(e) {
            console.error(
            `Wiki search for "${query}" returned an undefined object.
            This is likely because no such Wikipedia article exists,
            or because your query is not formatted correctly. (it is case sensitive)`
            )
        }
        await table.updateRecordAsync(record, {[resultColumn]: wikiIntroText,});
    }
}
output.markdown('# done')
